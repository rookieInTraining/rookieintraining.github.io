<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graphql-Queries on Home</title><link>https://ishabbi.tech/tags/graphql-queries/</link><description>Recent content in Graphql-Queries on Home</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 10 Aug 2024 00:55:00 +0530</lastBuildDate><atom:link href="https://ishabbi.tech/tags/graphql-queries/index.xml" rel="self" type="application/rss+xml"/><item><title>Fetch GraphQL query from an Apollo client using APQ - Part 2</title><link>https://ishabbi.tech/posts/debug-apq-extension-part2/</link><pubDate>Sat, 10 Aug 2024 00:55:00 +0530</pubDate><guid>https://ishabbi.tech/posts/debug-apq-extension-part2/</guid><description>As discussed in part-1 of this blog, when using apollo client one can boost the performance of the graphql queries by using &amp;ldquo;Automatic persisted queries&amp;rdquo; or APQ. By using APQ, the server caches each requests initiated from the browser against a hash which if not found, forces the web browser to re-send the request with the complete graphql query.
This however, adds an additional overhead in terms of automation (for fast moving development teams).</description></item><item><title>Fetch GraphQL query from an Apollo client using APQ - Part 1</title><link>https://ishabbi.tech/posts/debug-apq-extension-part1/</link><pubDate>Sat, 20 Jul 2024 23:55:00 +0530</pubDate><guid>https://ishabbi.tech/posts/debug-apq-extension-part1/</guid><description>APIs (Application Programming Interfaces) for web applications have evolved significantly since the early days of the internet. Initially, APIs were simple and used primarily for data exchange between server and client, often through protocols like SOAP (Simple Object Access Protocol). These early APIs were cumbersome and required extensive documentation and strict adherence to protocols.
The rise of REST (Representational State Transfer) in the early 2000s marked a major shift, offering a more flexible and scalable approach to building web APIs.</description></item></channel></rss>