<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ish's Blog</title><link>https://ishabbi.tech/</link><description>Recent content on Ish's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 26 Aug 2024 19:53:00 +0530</lastBuildDate><atom:link href="https://ishabbi.tech/index.xml" rel="self" type="application/rss+xml"/><item><title> QA Metrics: Leading and Lagging Indicators Every Tester Should Know</title><link>https://ishabbi.tech/posts/qa-best-practices-underdogs/</link><pubDate>Mon, 26 Aug 2024 19:53:00 +0530</pubDate><guid>https://ishabbi.tech/posts/qa-best-practices-underdogs/</guid><description>Hey there, fellow techies! ðŸ‘‹ Today, we&amp;rsquo;re diving into the world of Quality Assurance metrics. Specifically, we&amp;rsquo;ll be unpacking the dynamic duo of leading and lagging indicators. Buckle up, because this ride through the QA landscape is going to be both fun and informative!
The Metric Tango: Leading vs. Lagging Link to heading Before we jump into the nitty-gritty, let&amp;rsquo;s break down what we mean by leading and lagging indicators. Think of them as the fortune tellers and historians of the QA world:</description></item><item><title>Fetch GraphQL query from an Apollo client using APQ - Part 2</title><link>https://ishabbi.tech/posts/debug-apq-extension-part2/</link><pubDate>Sat, 10 Aug 2024 00:55:00 +0530</pubDate><guid>https://ishabbi.tech/posts/debug-apq-extension-part2/</guid><description>As discussed in part-1 of this blog, when using apollo client one can boost the performance of the graphql queries by using &amp;ldquo;Automatic persisted queries&amp;rdquo; or APQ. By using APQ, the server caches each requests initiated from the browser against a hash which if not found, forces the web browser to re-send the request with the complete graphql query.
This however, adds an additional overhead in terms of automation (for fast moving development teams).</description></item><item><title>Fetch GraphQL query from an Apollo client using APQ - Part 1</title><link>https://ishabbi.tech/posts/debug-apq-extension-part1/</link><pubDate>Sat, 20 Jul 2024 23:55:00 +0530</pubDate><guid>https://ishabbi.tech/posts/debug-apq-extension-part1/</guid><description>APIs (Application Programming Interfaces) for web applications have evolved significantly since the early days of the internet. Initially, APIs were simple and used primarily for data exchange between server and client, often through protocols like SOAP (Simple Object Access Protocol). These early APIs were cumbersome and required extensive documentation and strict adherence to protocols.
The rise of REST (Representational State Transfer) in the early 2000s marked a major shift, offering a more flexible and scalable approach to building web APIs.</description></item><item><title>Understanding the Selenium Webdriver</title><link>https://ishabbi.tech/posts/understanding-selenium-webdriver/</link><pubDate>Wed, 19 Feb 2020 21:47:38 +0530</pubDate><guid>https://ishabbi.tech/posts/understanding-selenium-webdriver/</guid><description>Over the course of time, my pursuit for understanding the internals of Selenium compelled me to crawl the corners of the internet in search for answers. I was searching for something that can help me connect the dots between the the browser and selenium. With countless blogs and documentation fuelling my experiments, here is what I&amp;rsquo;ve been able to learn of the WebDriver and the W3C WebDriver Protocol.
What is a WebDriver?</description></item><item><title>Generating HTML reports for your tests viaÂ Gradle</title><link>https://ishabbi.tech/posts/gradle-reporting-easy-way/</link><pubDate>Mon, 17 Feb 2020 18:45:18 +0530</pubDate><guid>https://ishabbi.tech/posts/gradle-reporting-easy-way/</guid><description>In the test automation world, visualizing the results of your tests have an equal priority in conjunction with the tests being executed. How will you be able to make the most out of the tests being executed? Would a simple report having Pass/Fail ratio along with the screenshots suffice? or the reports need to be more comprehensive? maybe the report needs to keep a trend of the tests being executed over time?</description></item><item><title>Hey there! Random stranger!</title><link>https://ishabbi.tech/contactme/</link><pubDate>Mon, 17 Feb 2020 18:41:49 +0530</pubDate><guid>https://ishabbi.tech/contactme/</guid><description>I&amp;rsquo;m always excited to connect with fellow tech enthusiasts, whether you&amp;rsquo;re a seasoned software professional or just starting your journey in the world of software. Feel free to drop an email @ &amp;ldquo;reach-ish@proton.me&amp;rdquo;. Alternatively, I&amp;rsquo;m available @ Topmate. Let&amp;rsquo;s connect.</description></item><item><title>About Me</title><link>https://ishabbi.tech/aboutme/</link><pubDate>Mon, 17 Feb 2020 18:37:30 +0530</pubDate><guid>https://ishabbi.tech/aboutme/</guid><description>Hey there! Welcome to my little corner of the internet. My name is Ish. ðŸ‘‹. I&amp;rsquo;ve been navigating this world since October, 1989.
What I Do Link to heading By day, I&amp;rsquo;m the Director of Quality Assurance and Automation, where I lead an amazing team of software engineers and testers. We&amp;rsquo;re the folks behind the scenes making sure that when you use some of the B2B and B2C platform, everything works smoothly and securely.</description></item></channel></rss>